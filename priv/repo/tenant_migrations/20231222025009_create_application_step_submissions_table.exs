defmodule HousingApp.Repo.TenantMigrations.CreateApplicationStepSubmissionsTable do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:application_step_submissions, primary_key: false, prefix: prefix()) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :tenant_id,
          references(:tenants,
            column: :id,
            name: "application_step_submissions_tenant_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :application_submission_id,
          references(:application_submissions,
            column: :id,
            name: "application_step_submissions_application_submission_id_fkey",
            type: :uuid,
            prefix: prefix()
          ),
          null: false
      add :step_id, :uuid, null: false
      add :data, :map, null: false
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :archived_at, :utc_datetime_usec
    end

    create index(:application_step_submissions, ["data"], using: "GIN")

    create index(:application_step_submissions, ["application_submission_id"])

    create unique_index(:application_step_submissions, [:application_submission_id, :step_id],
             name: "application_step_submissions_unique_submission_step_index"
           )
  end

  def down do
    drop_if_exists unique_index(
                     :application_step_submissions,
                     [:application_submission_id, :step_id],
                     name: "application_step_submissions_unique_submission_step_index"
                   )

    drop constraint(:application_step_submissions, "application_step_submissions_tenant_id_fkey")

    drop constraint(
           :application_step_submissions,
           "application_step_submissions_application_submission_id_fkey"
         )

    drop_if_exists index(:application_step_submissions, ["application_submission_id"],
                     name: "application_step_submissions_application_submission_id_index"
                   )

    drop_if_exists index(:application_step_submissions, ["data"],
                     name: "application_step_submissions_data_index"
                   )

    drop table(:application_step_submissions, prefix: prefix())
  end
end
