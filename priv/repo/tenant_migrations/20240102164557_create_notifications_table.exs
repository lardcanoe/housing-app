defmodule HousingApp.Repo.TenantMigrations.CreateNotificationsTable do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:notifications, primary_key: false, prefix: prefix()) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :tenant_id,
          references(:tenants,
            column: :id,
            name: "notifications_tenant_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :user_tenant_id,
          references(:user_tenants,
            column: :id,
            name: "notifications_user_tenant_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
      add :subject, :text, null: false
      add :message, :text, null: false, default: ""
      add :read, :boolean, null: false, default: false
      add :correlation, :map
      add :created_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :archived_at, :utc_datetime_usec
    end

    create index(:notifications, ["user_tenant_id"])
  end

  def down do
    drop constraint(:notifications, "notifications_tenant_id_fkey")

    drop constraint(:notifications, "notifications_user_tenant_id_fkey")

    drop_if_exists index(:notifications, ["user_tenant_id"],
                     name: "notifications_user_tenant_id_index"
                   )

    drop table(:notifications, prefix: prefix())
  end
end
