import Config

# Configure your database
config :housing_app, HousingApp.Repo,
  username: "elixir",
  password: "password",
  hostname: "localhost",
  database: "housing_app_dev",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :housing_app, HousingAppWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: 4000],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "hGqHvy0LuIUP1hZQIfIytb65wf8dXjlN0WPKuDkDazD1Hw6t2hbNw8RVKpOcNXUz",
  watchers: [
    esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch --external:ag-grid-community)]},
    tailwind: {Tailwind, :install_and_run, [:default, ~w(--watch)]}
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :housing_app, HousingAppWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/housing_app_web/(controllers|live|components)/.*(ex|heex)$"
    ]
  ]

# Enable dev routes for dashboard and mailbox
config :housing_app, dev_routes: true

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

# Include HEEx debug annotations as HTML comments in rendered markup
config :phoenix_live_view, :debug_heex_annotations, true

# Disable swoosh api client as it is only required for production adapters.
config :swoosh, :api_client, false

# ONLY IN DEV, can leak info
# https://hexdocs.pm/ash/policies.html#logging
config :ash, :policies, show_policy_breakdowns?: true

# https://hexdocs.pm/ash/pub_sub.html#debugging-pubsub
config :ash, :pub_sub, debug?: true

# config :crawly,
#   start_http_api?: true,
#   # closespider_timeout: 10,
#   concurrent_requests_per_domain: 5,
#   # closespider_itemcount: 1,
#   item: [:host, :tool, :portal, :source],
#   item_id: :host,
#   middlewares: [
#     Crawly.Middlewares.UniqueRequest,
#     # HousingApp.Utils.DomainsFilterMiddleware,
#     {Crawly.Middlewares.UserAgent,
#      user_agents: [
#        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36"
#      ]}
#   ],
#   pipelines: [
#     # {Crawly.Pipelines.Validate, fields: [:host]},
#     {Crawly.Pipelines.DuplicatesFilter, item_id: :host},
#     {Crawly.Pipelines.CSVEncoder, fields: [:host, :tool, :portal, :source]},
#     {HousingApp.Utils.CrawlWriteToFile, filename: "./crawlers.csv"}
#   ]

import_config "#{config_env()}.local.exs"
